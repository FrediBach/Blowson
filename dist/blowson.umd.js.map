{"version":3,"file":"blowson.umd.js","sources":["../src/txtgen/util.js","../src/txtgen/sample.js","../src/txtgen/main.js","../src/helpers.js","../src/blowson.js"],"sourcesContent":["// utils\n\nimport {\n  vowels,\n} from './sample';\n\nexport const unique = (a) => {\n  let r = [];\n  for (let i = 0; i < a.length; i++) {\n    if (r.indexOf(a[i]) === -1) {\n      r.push(a[i]);\n    }\n  }\n  return r;\n};\n\nexport const random = (min, max) => {\n  let offset = min;\n  let range = max - min + 1;\n  let rd = Math.floor(Math.random() * range) + offset;\n  return rd;\n};\n\nexport const rand = (a) => {\n  let w;\n  while (!w) {\n    w = a[random(0, a.length - 1)];\n  }\n  return w;\n};\n\nexport const pickLastPunc = () => {\n  let a = '.......!?!?;...'.split('');\n  return rand(a);\n};\n\nexport const pluralize = (word) => {\n  if (word.endsWith('s')) {\n    return word;\n  }\n  if (word.match(/(ss|ish|ch|x|us)$/)) {\n    word += 'e';\n  } else if (word.endsWith('y') && !vowels.includes(word.charAt(word.length - 2))) {\n    word = word.slice(0, word.length - 1);\n    word += 'ie';\n  }\n  return word + 's';\n};\n\nexport const normalize = (word) => {\n  let a = 'a';\n  if (word.match(/^(a|e|i|o)/)) {\n    a = 'an';\n  }\n  return `${a} ${word}`;\n};\n","// samples\n\nimport {\n  unique,\n} from './util';\n\n/* eslint-disable */\nexport var nouns = [ 'alligator', 'ant', 'bear', 'bee', 'bird', 'camel', 'cat', 'cheetah', 'chicken', 'chimpanzee', 'cow', 'crocodile', 'deer', 'dog', 'dolphin', 'duck', 'eagle', 'elephant', 'fish', 'fly', 'fox', 'frog', 'giraffe', 'goat', 'goldfish', 'hamster', 'hippopotamus', 'horse', 'kangaroo', 'kitten', 'lion', 'lobster', 'monkey', 'octopus', 'owl', 'panda', 'pig', 'puppy', 'rabbit', 'rat', 'scorpion', 'seal', 'shark', 'sheep', 'snail', 'snake', 'spider', 'squirrel', 'tiger', 'turtle', 'wolf', 'zebra', 'apple', 'apricot', 'banana', 'blackberry', 'blueberry', 'cherry', 'cranberry', 'currant', 'fig', 'grape', 'grapefruit', 'grapes', 'kiwi', 'kumquat', 'lemon', 'lime', 'melon', 'nectarine', 'orange', 'peach', 'pear', 'persimmon', 'pineapple', 'plum', 'pomegranate', 'prune', 'raspberry', 'strawberry', 'tangerine', 'watermelon' ];\nexport var adjectives = [ 'adaptable', 'adventurous', 'affable', 'affectionate', 'agreeable', 'alert', 'alluring', 'ambitious', 'ambitious', 'amiable', 'amicable', 'amused', 'amusing', 'boundless', 'brave', 'brave', 'bright', 'bright', 'broad-minded', 'calm', 'calm', 'capable', 'careful', 'charming', 'charming', 'cheerful', 'coherent', 'comfortable', 'communicative', 'compassionate', 'confident', 'conscientious', 'considerate', 'convivial', 'cooperative', 'courageous', 'courageous', 'courteous', 'creative', 'credible', 'cultured', 'dashing', 'dazzling', 'debonair', 'decisive', 'decisive', 'decorous', 'delightful', 'detailed', 'determined', 'determined', 'diligent', 'diligent', 'diplomatic', 'discreet', 'discreet', 'dynamic', 'dynamic', 'eager', 'easygoing', 'efficient', 'elated', 'eminent', 'emotional', 'enchanting', 'encouraging', 'endurable', 'energetic', 'energetic', 'entertaining', 'enthusiastic', 'enthusiastic', 'excellent', 'excited', 'exclusive', 'exuberant', 'exuberant', 'fabulous', 'fair', 'fair-minded', 'faithful', 'faithful', 'fantastic', 'fearless', 'fearless', 'fine', 'forceful', 'frank', 'frank', 'friendly', 'friendly', 'funny', 'funny', 'generous', 'generous', 'gentle', 'gentle', 'glorious', 'good', 'good', 'gregarious', 'happy', 'hard-working', 'harmonious', 'helpful', 'helpful', 'hilarious', 'honest', 'honorable', 'humorous', 'imaginative', 'impartial', 'impartial', 'independent', 'industrious', 'instinctive', 'intellectual', 'intelligent', 'intuitive', 'inventive', 'jolly', 'joyous', 'kind', 'kind', 'kind-hearted', 'knowledgeable', 'level', 'likeable', 'lively', 'lovely', 'loving', 'loving', 'loyal', 'lucky', 'mature', 'modern', 'modest', 'neat', 'nice', 'nice', 'obedient', 'optimistic', 'painstaking', 'passionate', 'patient', 'peaceful', 'perfect', 'persistent', 'philosophical', 'pioneering', 'placid', 'placid', 'plausible', 'pleasant', 'plucky', 'plucky', 'polite', 'powerful', 'practical', 'pro-active', 'productive', 'protective', 'proud', 'punctual', 'quick-witted', 'quiet', 'quiet', 'rational', 'receptive', 'reflective', 'reliable', 'relieved', 'reserved', 'resolute', 'resourceful', 'responsible', 'rhetorical', 'righteous', 'romantic', 'romantic', 'sedate', 'seemly', 'selective', 'self-assured', 'self-confident', 'self-disciplined', 'sensible', 'sensitive', 'sensitive', 'shrewd', 'shy', 'silly', 'sincere', 'sincere', 'skillful', 'smiling', 'sociable', 'splendid', 'steadfast', 'stimulating', 'straightforward', 'successful', 'succinct', 'sympathetic', 'talented', 'thoughtful', 'thoughtful', 'thrifty', 'tidy', 'tough', 'tough', 'trustworthy', 'unassuming', 'unbiased', 'understanding', 'unusual', 'upbeat', 'versatile', 'vigorous', 'vivacious', 'warm', 'warmhearted', 'willing', 'willing', 'wise', 'witty', 'witty', 'wonderful' ];\n\nexport var vowels = [\n  'a', 'e', 'i', 'o', 'u', 'y'\n];\n\nexport var sentenceTemplates = [\n  'the {{noun}} is {{a_noun}}',\n  '{{a_noun}} is {{an_adjective}} {{noun}}',\n  'the first {{adjective}} {{noun}} is, in its own way, {{a_noun}}',\n  'their {{noun}} was, in this moment, {{an_adjective}} {{noun}}',\n  '{{a_noun}} is {{a_noun}} from the right perspective',\n  'the literature would have us believe that {{an_adjective}} {{noun}} is not but {{a_noun}}',\n  '{{an_adjective}} {{noun}} is {{a_noun}} of the mind',\n  'the {{adjective}} {{noun}} reveals itself as {{an_adjective}} {{noun}} to those who look',\n  'authors often misinterpret the {{noun}} as {{an_adjective}} {{noun}}, when in actuality it feels more like {{an_adjective}} {{noun}}',\n  'we can assume that any instance of {{a_noun}} can be construed as {{an_adjective}} {{noun}}',\n  'they were lost without the {{adjective}} {{noun}} that composed their {{noun}}',\n  'the {{adjective}} {{noun}} comes from {{an_adjective}} {{noun}}',\n  '{{a_noun}} can hardly be considered {{an_adjective}} {{noun}} without also being {{a_noun}}',\n  'few can name {{an_adjective}} {{noun}} that isn\\'t {{an_adjective}} {{noun}}',\n  'some posit the {{adjective}} {{noun}} to be less than {{adjective}}',\n  '{{a_noun}} of the {{noun}} is assumed to be {{an_adjective}} {{noun}}',\n  '{{a_noun}} sees {{a_noun}} as {{an_adjective}} {{noun}}',\n  'the {{noun}} of {{a_noun}} becomes {{an_adjective}} {{noun}}',\n  '{{a_noun}} is {{a_noun}}\\'s {{noun}}',\n  '{{a_noun}} is the {{noun}} of {{a_noun}}',\n  '{{an_adjective}} {{noun}}\\'s {{noun}} comes with it the thought that the {{adjective}} {{noun}} is {{a_noun}}',\n  '{{nouns}} are {{adjective}} {{nouns}}',\n  '{{adjective}} {{nouns}} show us how {{nouns}} can be {{nouns}}',\n  'before {{nouns}}, {{nouns}} were only {{nouns}}',\n  'those {{nouns}} are nothing more than {{nouns}}',\n  'some {{adjective}} {{nouns}} are thought of simply as {{nouns}}',\n  'one cannot separate {{nouns}} from {{adjective}} {{nouns}}',\n  'the {{nouns}} could be said to resemble {{adjective}} {{nouns}}',\n  '{{an_adjective}} {{noun}} without {{nouns}} is truly a {{noun}} of {{adjective}} {{nouns}}'\n];\n\nexport var phrases = [\n  'to be more specific, ',\n  'in recent years, ',\n  'however, ',\n  'by the way',\n  'of course, ',\n  'some assert that ',\n  'if this was somewhat unclear, ',\n  'unfortunately, that is wrong; on the contrary, ',\n  'it\\'s very tricky, if not impossible, ',\n  'this could be, or perhaps ',\n  'this is not to discredit the idea that ',\n  'we know that ',\n  'it\\'s an undeniable fact, really; ',\n  'framed in a different way, ',\n  'what we don\\'t know for sure is whether or not ',\n  'as far as we can estimate, ',\n  'as far as he is concerned, ',\n  'the zeitgeist contends that ',\n  'though we assume the latter, ',\n  'far from the truth, ',\n  'extending this logic, ',\n  'nowhere is it disputed that ',\n  'in modern times ',\n  'in ancient times ',\n  'recent controversy aside, ',\n  'washing and polishing the car,',\n  'having been a gymnast, ',\n  'after a long day at school and work, ',\n  'waking to the buzz of the alarm clock, ',\n  'draped neatly on a hanger, ',\n  'shouting with happiness, '\n];\n/* eslint-enable */\n\nexport const addNouns = (ls = []) => {\n  let a = nouns.concat(ls);\n  nouns = unique(a);\n  return nouns.length;\n};\n\nexport const addAdjectives = (ls) => {\n  let a = adjectives.concat(ls);\n  adjectives = unique(a);\n  return adjectives.length;\n};\n\nexport const addTemplates = (ls) => {\n  let a = sentenceTemplates.concat(ls);\n  sentenceTemplates = unique(a);\n  return sentenceTemplates.length;\n};\n\n","/**\n * txtgen\n * @ndaidong\n**/\n\nimport {\n  nouns,\n  adjectives,\n  sentenceTemplates,\n  phrases,\n} from './sample';\n\nimport {\n  random,\n  rand,\n  pickLastPunc,\n  pluralize,\n  normalize,\n} from './util';\n\nexport {\n  addNouns,\n  addAdjectives,\n  addTemplates,\n} from './sample';\n\nlet actions = [\n  'noun', 'a_noun', 'nouns',\n  'adjective', 'an_adjective',\n];\n\nexport const generator = {\n  noun: () => {\n    return rand(nouns);\n  },\n  a_noun: () => { // eslint-disable-line camelcase\n    return normalize(rand(nouns));\n  },\n  nouns: () => {\n    return pluralize(rand(nouns));\n  },\n  adjective: () => {\n    return rand(adjectives);\n  },\n  an_adjective: () => { // eslint-disable-line camelcase\n    return normalize(rand(adjectives));\n  },\n};\n\nconst trim = (s) => {\n  return s.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '')\n    .replace(/\\r?\\n|\\r/g, ' ')\n    .replace(/\\s\\s+|\\r/g, ' ');\n};\n\nconst make = (template) => {\n  let sentence = template;\n  let occurrences = template.match(/\\{\\{(.+?)\\}\\}/g);\n\n  if (occurrences && occurrences.length) {\n    for (let i = 0; i < occurrences.length; i++) {\n      let action = trim(occurrences[i].replace('{{', '').replace('}}', ''));\n      let result;\n      if (actions.includes(action)) {\n        result = generator[action]();\n      }\n      sentence = sentence.replace(occurrences[i], result);\n    }\n  }\n  return sentence;\n};\n\nconst randomStartingPhrase = () => {\n  if (Math.random() < 0.33) {\n    return rand(phrases);\n  }\n  return '';\n};\n\nconst makeSentenceFromTemplate = () => {\n  return make(rand(sentenceTemplates));\n};\n\nexport const sentence = () => {\n  let phrase = randomStartingPhrase();\n  let s = phrase + makeSentenceFromTemplate();\n  s = s.charAt(0).toUpperCase() + s.slice(1);\n  s += pickLastPunc();\n  return s;\n};\n\nexport const paragraph = (len = 0) => {\n  if (!len) {\n    len = random(3, 10);\n  }\n  let t = Math.min(len, 15);\n  let a = [];\n  while (a.length < t) {\n    let s = sentence();\n    a.push(s);\n  }\n  return a.join(' ');\n};\n\nexport const article = (len = 0) => {\n  if (!len) {\n    len = random(3, 10);\n  }\n  let t = Math.min(len, 15);\n  let a = [];\n  while (a.length < t) {\n    let s = paragraph();\n    a.push(s);\n  }\n  return a.join('\\n\\n');\n};\n","import Chance from 'chance';\nimport slugify from 'slugify';\nimport md5 from 'md5';\nimport {format} from 'date-fns';\n\nconst chance = new Chance();\n\nexport function randomTime() {\n    let hours = String(chance.hour({ twentyfour: true })),\n        minutes = String(chance.minute()),\n        seconds = String(chance.second());\n\n    if (hours.length === 1) '0' + hours;\n    if (minutes.length === 1) '0' + minutes;\n    if (seconds.length === 1) '0' + seconds;\n\n    return [hours, minutes, seconds].join(':');\n}\n\nexport function randomDate(start, end) {\n    var d = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime())),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nexport function randomDatetime(start, end) {\n    var d = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime())),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear(),\n        hours = '' + d.getHours(),\n        minutes = '' + d.getMinutes(),\n        seconds = '' + d.getSeconds();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    if (hours.length < 2) hours = '0' + hours;\n    if (minutes.length < 2) minutes = '0' + minutes;\n    if (seconds.length < 2) seconds = '0' + seconds;\n\n    return [year, month, day].join('-') + 'T' + [hours, minutes, seconds].join(':') + '+01:00';\n}\n\nexport function findGap(numArray) {\n    let min = Math.min.apply(Math, numArray),\n        max = Math.max.apply(Math, numArray),\n        missingNums = [],\n        i;\n\n    for (i = min; i <= max; i++) {\n        if (numArray.indexOf(i) == -1) {\n            missingNums.push(i);\n        }\n    }\n\n    if (missingNums.length > 0) {\n        return {\n            start: Math.min.apply(Math, missingNums),\n            end: Math.max.apply(Math, missingNums)\n        };\n    } else {\n        return false;\n    }\n}\n\nexport function floatPrecision(a) {\n    if (!isFinite(a)) return 0;\n\n    var e = 1, p = 0;\n\n    while (Math.round(a * e) / e !== a) {\n        e *= 10; p++;\n    }\n\n    return p;\n}\n\nexport function getMaxPrecision(floatArray) {\n    let maxPrecision = 0,\n        value;\n\n    for (value of floatArray) {\n        let precision = floatPrecision(value);\n\n        if (precision > maxPrecision) {\n            maxPrecision = precision;\n        }\n    }\n\n    return maxPrecision;\n}\n\nexport function everythingCapitalized(stringArray) {\n    let isCapitalized = true,\n        str;\n\n    for (str of stringArray) {\n        if (capitalize(str) !== str) {\n            isCapitalized = false;\n            break;\n        }\n    }\n\n    return isCapitalized;\n}\n\nexport function minNumber(intArray) {\n    return Math.min.apply(Math, intArray);\n}\n\nexport function maxNumber(intArray) {\n    return Math.max.apply(Math, intArray);\n}\n\nexport function minGapOfIntArray(intArray) {\n    let minGap = 999999999,\n        value1,\n        value2;\n\n    for (value1 of intArray) {\n        for (value2 of intArray) {\n            if (value1 !== value2 && Math.abs(value1 - value2) < minGap) {\n                minGap = Math.abs(value1 - value2);\n            }\n        }\n    }\n\n    return minGap;\n}\n\nexport function randomIntWithStep(min, max, step) {\n    let delta,\n        range,\n        rand;\n\n    if (arguments.length < 2) {\n        max = min;\n        min = 0;\n    }\n\n    if (!step) {\n        step = 1;\n    }\n\n    delta = max - min;\n    range = delta / step;\n    rand = Math.random();\n    rand *= range;\n    rand = Math.floor(rand);\n    rand *= step;\n    rand += min;\n\n    return rand;\n}\n\nexport function minStrLength(strArray) {\n    return Math.min.apply(Math, strArray.map(function (str) { return str.length; }));\n}\n\nexport function maxStrLength(strArray) {\n    return Math.max.apply(Math, strArray.map(function (str) { return str.length; }));\n}\n\nexport function minWordCount(strArray) {\n    return Math.min.apply(Math, strArray.map(function (str) { return str.split(' ').length; }));\n}\n\nexport function maxWordCount(strArray) {\n    return Math.max.apply(Math, strArray.map(function (str) { return str.split(' ').length; }));\n}\n\nexport function minSentenceCount(strArray) {\n    return Math.min.apply(Math, strArray.map(function (str) { return str.split(/[\\.\\!\\?]+/).length; }));\n}\n\nexport function maxSentenceCount(strArray) {\n    return Math.max.apply(Math, strArray.map(function (str) { return str.split(/[\\.\\!\\?]+/).length; }));\n}\n\nexport function minParagraphCount(strArray) {\n    return Math.min.apply(Math, strArray.map(function (str) { return str.replace(/\\n$/gm, '').split(/\\n/).length; }));\n}\n\nexport function maxParagraphCount(strArray) {\n    return Math.max.apply(Math, strArray.map(function (str) { return str.replace(/\\n$/gm, '').split(/\\n/).length; }));\n}\n\nexport function minDate(dateArray) {\n    return new Date(Math.min.apply(null, dateArray));\n}\n\nexport function maxDate(dateArray) {\n    return new Date(Math.max.apply(null, dateArray));\n}\n\nexport function convertStringDateArray(stringDateArray) {\n    let newArray = [],\n        dateString;\n\n    for (dateString of stringDateArray) {\n        newArray.push(new Date(dateString));\n    }\n\n    return newArray;\n}\n\nexport function capitalize(str) {\n    return str.replace(/(?:^|\\s)\\S/g, function (a) { return a.toUpperCase(); });\n};\n\nexport function isDateString(str) {\n    return /^[0-9]{4}-[0-9]{2}-[0-9]{2}$/.test(str);\n}\n\nexport function isDatetimeString(str) {\n    return /^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$/.test(str);\n}\n\nexport function isTimeString(str) {\n    return /^[0-9]{2}:[0-9]{2}:[0-9]{2}$/.test(str);\n}\n\nexport function getWeights(allEntries, uniqueEntries) {\n    let weightedEntries = {},\n        weights = [],\n        entry;\n    \n    for (entry of allEntries) {\n        if (typeof weightedEntries[entry] === 'undefined') {\n            weightedEntries[entry] = 1;\n        } else {\n            weightedEntries[entry]++;\n        }\n    }\n\n    for (entry of uniqueEntries) {\n        weights.push(weightedEntries[entry]);\n    }\n\n    return weights;\n}\n\nexport function getNumberDirection(entries) {\n    let direction = null,\n        lastValue = null,\n        noDirection = false,\n        value;\n\n    for (value of entries) {\n        if (lastValue !== null && value > lastValue) {\n            if (direction === 'desc') {\n                noDirection = true;\n                break;\n            }\n            direction = 'asc';\n        }\n        if (lastValue !== null && value < lastValue) {\n            if (direction === 'asc') {\n                noDirection = true;\n                break;\n            }\n            direction = 'desc';\n        }\n        lastValue = value;\n    }\n\n    if (noDirection || direction === null) {\n        return false;\n    } else {\n        return direction;\n    }\n}\n\nexport function filterValue(value, filter) {\n    value = String(value);\n\n    if (filter === 'slug') {\n        return slugify(value, { lower: true });\n    } else if (filter === 'lower') {\n        return value.toLowerCase();\n    } else if (filter === 'uppper') {\n        return value.toLowerCase();\n    } else if (filter === 'md5') {\n        return md5(value);\n    } else if (filter === 'capitalize') {\n        return capitalize(value);\n    } else if (filter === 'optional' && Math.random() >= 0.5) {\n        return '';\n    } else if (filter.substring(0, 5) === 'date:') {\n        let filterSplit = filter.split(':');\n        return format(new Date(value), filterSplit[1]);\n    } else {\n        return value;\n    }\n}\n\nexport function applyFilters(value, filters) {\n    let filtered = filterValue(value, filters[1]),\n        nr = 2;\n\n    while (filters.length > nr) {\n        filtered = filterValue(filtered, filters[nr]);\n        nr++;\n    }\n\n    return filtered;\n}","import _ from 'lodash';\nimport Chance from 'chance';\nimport faker from 'faker';\n\nimport {\n    sentence,\n    paragraph,\n    article,\n    addTemplates,\n    generator\n} from './txtgen/main'; // Extended version of the Txtgen library. Original at: https://github.com/ndaidong/txtgen\n\nimport {\n    randomTime,\n    randomDate,\n    randomDatetime,\n    findGap,\n    getMaxPrecision,\n    everythingCapitalized,\n    minNumber,\n    maxNumber,\n    minGapOfIntArray,\n    randomIntWithStep,\n    minStrLength,\n    maxStrLength,\n    minWordCount,\n    maxWordCount,\n    minSentenceCount,\n    maxSentenceCount,\n    minParagraphCount,\n    maxParagraphCount,\n    minDate,\n    maxDate,\n    convertStringDateArray,\n    capitalize,\n    isDateString,\n    isDatetimeString,\n    isTimeString,\n    getWeights,\n    getNumberDirection,\n    filterValue,\n    applyFilters\n} from './helpers';\n\nconst chance = new Chance();\n\naddTemplates([\n    'congratulations to the {{noun}} that won the {{adjective}} {{noun}} with {{a_noun}}',\n    'incomprehensibilities of a {{adjective}} {{noun}} and {{a_noun}} made {{a_noun}} {{adjective}}'\n]);\n\nmodule.exports = function blowson(data) {\n    let types = [],\n        type,\n        row,\n        field;\n\n    for (type in data) {\n        let typeDef = {\n                key: type,\n                minID: 1,\n                maxID: 1,\n                totalCount: 0,\n                fields: {}\n            },\n            entry,\n            field;\n\n        for (entry in data[type]) {\n            for (field in data[type][entry]) {\n                let fieldValue = data[type][entry][field],\n                    fieldType = 'undefined';\n\n                if (typeof fieldValue === 'boolean') {\n                    fieldType = 'boolean';\n                } else if (typeof fieldValue === 'number') {\n                    if (Math.round(fieldValue) === fieldValue) {\n                        fieldType = 'int';\n                    } else {\n                        fieldType = 'float';\n                    }\n                } else if (typeof fieldValue === 'string') {\n                    if (isDateString(fieldValue)) {\n                        fieldType = 'date';\n                    } else if (isDatetimeString(fieldValue)) {\n                        fieldType = 'datetime';\n                    } else if (isTimeString(fieldValue)) {\n                        fieldType = 'time';\n                    } else if (fieldValue.length === 1) {\n                        fieldType = 'char';\n                    } else {\n                        fieldType = 'string';\n                    }\n                } else if (typeof fieldValue === 'object') {\n                    fieldType = 'JSON';\n                }\n\n                if (typeof typeDef.fields[field] === 'undefined') {\n                    typeDef.fields[field] = {\n                        types: [fieldType],\n                        entries: [fieldValue],\n                        allEntries: [fieldValue],\n                        cnt: 1\n                    };\n                } else {\n                    typeDef.fields[field].types.push(fieldType);\n                    typeDef.fields[field].types = _.uniq(typeDef.fields[field].types);\n                    typeDef.fields[field].entries.push(fieldValue);\n                    typeDef.fields[field].entries = _.uniq(typeDef.fields[field].entries);\n                    typeDef.fields[field].allEntries.push(fieldValue);\n                    typeDef.fields[field].cnt++;\n                }\n            }\n        }\n\n        for (field in typeDef.fields) {\n            if (field === 'id') {\n                typeDef.totalCount = typeDef.fields[field].cnt;\n            }\n            if (typeDef.fields[field].types.length === 1) {\n                typeDef.fields[field].type = typeDef.fields[field].types[0];\n            }\n            if (typeDef.fields[field].entries.length < typeDef.fields[field].cnt) {\n                typeDef.fields[field].repeatEntries = true;\n                typeDef.fields[field].weights = getWeights(typeDef.fields[field].allEntries, typeDef.fields[field].entries);\n            } else {\n                typeDef.fields[field].repeatEntries = false;\n            }\n            if (typeDef.fields[field].cnt < typeDef.totalCount) {\n                typeDef.fields[field].required = false;\n            } else {\n                typeDef.fields[field].required = true;\n            }\n        }\n\n        typeDef.gap = findGap(typeDef.fields['id'].entries);\n\n        types.push(typeDef);\n    }\n\n    for (type in types) {\n        let settings = types[type];\n\n        if (settings.gap) {\n            let id,\n                field;\n\n            for (id = settings.gap.start; id <= settings.gap.end; id++) {\n                let row = {};\n\n                for (field in settings.fields) {\n                    let value = '';\n\n                    if (settings.fields[field].repeatEntries) {\n                        value = chance.weighted(settings.fields[field].entries, settings.fields[field].weights);\n                    } else {\n\n                        if (field === 'id') value = id;\n                        if (field === 'age' && settings.fields[field].type === 'int') value = chance.age();\n                        if (field === 'firstname' && settings.fields[field].type === 'string') value = chance.first();\n                        if (field === 'lastname' && settings.fields[field].type === 'string') value = chance.last();\n                        if (field === 'company' && settings.fields[field].type === 'string') value = chance.company();\n                        if (field === 'country' && settings.fields[field].type === 'string') value = chance.country();\n                        if (field === 'email' && settings.fields[field].type === 'string') value = faker.internet.exampleEmail();\n                        if (field === 'color' && settings.fields[field].type === 'string') value = chance.color();\n                        if (field === 'ip' && settings.fields[field].type === 'string') value = chance.ip();\n                        if (field === 'profession' && settings.fields[field].type === 'string') value = chance.profession();\n                        if (field === 'url' && settings.fields[field].type === 'string') value = chance.url();\n                        if (field === 'city' && settings.fields[field].type === 'string') value = chance.city();\n                        if (field === 'street' && settings.fields[field].type === 'string') value = chance.street();\n                        if (field === 'zip' && settings.fields[field].type === 'int') value = parseInt(chance.zip());\n                        if (field === 'weekday' && settings.fields[field].type === 'string') value = chance.weekday();\n                        if (field === 'year' && settings.fields[field].type === 'int') value = parseInt(chance.year());\n                        if (field === 'password' && settings.fields[field].type === 'string') value = chance.hash();\n                        if (field === 'guid' && settings.fields[field].type === 'string') value = chance.guid();\n                        if (field === 'product' && settings.fields[field].type === 'string') value = faker.commerce.productName();\n                        if (field === 'material' && settings.fields[field].type === 'string') value = faker.commerce.productMaterial();\n                        if (field === 'iban' && settings.fields[field].type === 'string') value = faker.finance.iban();\n                        if (field === 'bic' && settings.fields[field].type === 'string') value = faker.finance.bic();\n                        if (field === 'avatar' && settings.fields[field].type === 'string') value = faker.image.avatar();\n                        if (field === 'username' && settings.fields[field].type === 'string') value = faker.internet.userName();\n                        if (field === 'homepage' && settings.fields[field].type === 'string') value = faker.internet.url();\n                        if (field === 'job' && settings.fields[field].type === 'string') value = faker.name.jobTitle();\n                        if (field === 'mimetype' && settings.fields[field].type === 'string') value = faker.system.mimeType();\n\n                        if (value === '' && settings.fields[field].type === 'JSON') {\n                            value = {};\n                        }\n\n                        if (value === '' && settings.fields[field].type === 'string') {\n                            let minLength = minStrLength(settings.fields[field].entries),\n                                maxLength = maxStrLength(settings.fields[field].entries),\n                                minWords = minWordCount(settings.fields[field].entries),\n                                maxWords = maxWordCount(settings.fields[field].entries),\n                                minSentences = minSentenceCount(settings.fields[field].entries),\n                                maxSentences = maxSentenceCount(settings.fields[field].entries),\n                                minParagraphs = minParagraphCount(settings.fields[field].entries),\n                                maxParagraphs = maxParagraphCount(settings.fields[field].entries);\n\n                            if (maxParagraphs > 1) {\n                                value = article(Math.floor(Math.random() * maxParagraphs) + minParagraphs);\n                            } else if (maxSentences > 1) {\n                                value = paragraph(Math.floor(Math.random() * maxSentences) + minSentences);\n                            } else if (maxWords > 1) {\n                                value = chance.sentence({ words: Math.floor(Math.random() * maxWords) + minWords }).slice(0, -1);\n                            } else {\n                                if (settings.fields[field].entries[0][0].toUpperCase() === settings.fields[field].entries[0][0]) {\n                                    value = chance.capitalize(chance.word({ length: Math.floor(Math.random() * minLength) + maxLength }));\n                                } else {\n                                    value = chance.string({ length: Math.floor(Math.random() * minLength) + maxLength });\n                                }\n                            }\n\n                            if (settings.fields[field].entries[0] === settings.fields[field].entries[0].toUpperCase()) {\n                                value = value.toUpperCase();\n                            } else if (settings.fields[field].entries[0] === settings.fields[field].entries[0].toLowerCase()) {\n                                value = value.toLowerCase();\n                            } else if (everythingCapitalized(settings.fields[field].entries)) {\n                                value = capitalize(value);\n                            }\n                        }\n\n                        if (value === '' && settings.fields[field].type === 'int') {\n                            let minInt = minNumber(settings.fields[field].entries),\n                                maxInt = maxNumber(settings.fields[field].entries),\n                                minGap = minGapOfIntArray(settings.fields[field].entries);\n\n                            value = randomIntWithStep(minInt, maxInt, minGap);\n                        }\n\n                        if (value === '' && settings.fields[field].type === 'float') {\n                            let minFloat = minNumber(settings.fields[field].entries),\n                                maxFloat = maxNumber(settings.fields[field].entries),\n                                maxPrecision = getMaxPrecision(settings.fields[field].entries);\n\n                            value = Number((Math.random() * maxFloat + minFloat).toFixed(maxPrecision));\n                        }\n\n                        if (value === '' && settings.fields[field].type === 'char') {\n                            if (settings.fields[field].entries[0] === settings.fields[field].entries[0].toUpperCase()) {\n                                value = chance.letter({ casing: 'upper' });\n                            } else if (settings.fields[field].entries[0] === settings.fields[field].entries[0].toLowerCase()) {\n                                value = chance.letter({ casing: 'lower' });\n                            } else {\n                                value = chance.letter();\n                            }\n                        }\n\n                        if (value === '' && settings.fields[field].type === 'date') {\n                            let minDateDate = minDate(convertStringDateArray(settings.fields[field].entries)),\n                                maxDateDate = maxDate(convertStringDateArray(settings.fields[field].entries));\n\n                            value = randomDate(minDateDate, maxDateDate);\n                        }\n\n                        if (value === '' && settings.fields[field].type === 'datetime') {\n                            let minDateDate = minDate(convertStringDateArray(settings.fields[field].entries)),\n                                maxDateDate = maxDate(convertStringDateArray(settings.fields[field].entries));\n\n                            value = randomDatetime(minDateDate, maxDateDate);\n                        }\n\n                        if (value === '' && settings.fields[field].type === 'time') {\n                            value = randomTime();\n                        }\n\n                    }\n\n                    if (settings.fields[field].required || Math.random() >= 0.5) {\n                        row[field] = value;\n                    }\n                }\n\n                data[settings.key].push(row);\n            }\n\n        }\n\n    }\n\n    // Replace template variables:\n    for (type in data) {\n        for (row in data[type]) {\n            for (field in data[type][row]) {\n                let value = data[type][row][field];\n\n                if (typeof value === 'string') {\n                    data[type][row][field] = value.replace(/{{\\s*([\\w\\.\\?\\|\\:]+)\\s*}}/g, function (match, capture) {\n                        let defaultParts = capture.split('?'),\n                            filterParts = defaultParts[0].split('|'),\n                            parts = filterParts[0].split('.');\n\n                        if (parts[0] === 'number' && parts.length === 1) {\n                            return Math.floor(Math.random() * 10);\n                        } else if (parts[0] === 'sentence' && parts.length === 1) {\n                            return sentence();\n                        } else if (parts[0] === 'word' && parts.length === 2) {\n                            if (typeof generator[parts[1]] !== 'undefined') {\n                                if (filterParts.length > 1) {\n                                    return applyFilters(generator[parts[1]](), filterParts);\n                                } else {\n                                    return generator[parts[1]]();\n                                }\n                            }\n                        } else if (parts[0] === 'field' && parts.length === 2 && typeof data[type][row][parts[1]] !== 'undefined') {\n                            if (filterParts.length > 1) {\n                                return applyFilters(data[type][row][parts[1]], filterParts);\n                            } else {\n                                return data[type][row][parts[1]];\n                            }\n                        } else if (parts[0] === 'field' && parts.length === 3 && typeof data[type][row][parts[1] + '_id'] !== 'undefined' && typeof data[parts[1] + 's'] !== 'undefined') {\n                            let id = data[type][row][parts[1] + '_id'],\n                                refType = parts[1] + 's',\n                                refRow,\n                                refField,\n                                found = false;\n\n                            for (refRow in data[refType]) {\n                                for (refField in data[refType][refRow]) {\n                                    if (found && refField === parts[2]) {\n                                        if (filterParts.length > 1) {\n                                            return applyFilters(data[refType][refRow][refField], filterParts);\n                                        } else {\n                                            return data[refType][refRow][refField];\n                                        }\n                                    }\n\n                                    if (refField === 'id' && data[refType][refRow][refField] === id) {\n                                        found = true;\n                                    }\n                                }\n                            }\n\n                            if (defaultParts.length > 1) {\n                                return defaultParts[1];\n                            }\n\n                        } else if (defaultParts.length > 1) {\n                            return defaultParts[1];\n                        }\n\n                        return match;\n                    });\n\n                    data[type][row][field] = data[type][row][field].replace(/  +/g, ' ');\n                }\n            }\n        }\n    }\n\n    return data;\n}"],"names":["const","random","min","max","let","offset","range","Math","floor","rand","a","w","length","normalize","word","match","nouns","adjectives","vowels","sentenceTemplates","phrases","actions","generator","noun","a_noun","endsWith","includes","charAt","slice","adjective","an_adjective","makeSentenceFromTemplate","template","sentence","occurrences","i","action","replace","result","make","s","toUpperCase","split","paragraph","len","t","push","join","article","chance","Chance","randomDatetime","start","end","d","Date","getTime","month","getMonth","day","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","findGap","numArray","apply","missingNums","indexOf","floatPrecision","isFinite","e","p","round","getMaxPrecision","floatArray","maxPrecision","precision","everythingCapitalized","stringArray","str","isCapitalized","capitalize","minNumber","intArray","maxNumber","minGapOfIntArray","value1","value2","minGap","abs","randomIntWithStep","step","arguments","maxStrLength","strArray","map","minWordCount","maxWordCount","minSentenceCount","maxSentenceCount","minParagraphCount","maxParagraphCount","minDate","dateArray","maxDate","convertStringDateArray","stringDateArray","newArray","isDatetimeString","test","isTimeString","getWeights","allEntries","uniqueEntries","entry","weightedEntries","weights","filterValue","value","filter","String","slugify","lower","toLowerCase","md5","substring","filterSplit","format","applyFilters","filters","filtered","nr","concat","r","unique","module","exports","data","type","row","field","types","typeDef","key","minID","maxID","totalCount","fields","fieldValue","fieldType","entries","cnt","_","uniq","repeatEntries","required","gap","settings","id","weighted","age","first","last","company","country","faker","internet","exampleEmail","color","ip","profession","url","city","street","parseInt","zip","weekday","hash","guid","commerce","productName","productMaterial","finance","iban","bic","image","avatar","userName","name","jobTitle","system","mimeType","minLength","maxLength","minWords","maxWords","minSentences","maxSentences","minParagraphs","maxParagraphs","words","string","minFloat","maxFloat","Number","toFixed","letter","casing","minDateDate","maxDateDate","hour","twentyfour","minute","second","capture","defaultParts","filterParts","parts","refRow","refField","refType","found"],"mappings":"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"}